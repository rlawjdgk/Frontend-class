// 주어진 배열
let arr = [4, 2, 3, 1];
// 4와 2를 비교해서 4가 더 크니까 자리를 바꿔서 [2, 4, 3, 1]이 돼요.
// 그 다음엔 4와 3을 비교하고 자리를 바꿔서 [2, 3, 4, 1]이 돼요.
// 마지막으로 4와 1을 비교해서 자리를 바꿔서 [2, 3, 1, 4]가 돼요.
// 다시 처음부터 반복해서 끝날 때까지 비교하고 바꾸면, 결국 [1, 2, 3, 4]처럼 정렬돼요.

// 버블 정렬 함수 정의
const bubbleSort = (arr) => {
  // 바깥쪽 반복문: 배열의 크기만큼 반복
  for (let i = 0; i < arr.length - 1; i++) {
    // 안쪽 반복문: 비교할 두 원소를 순차적으로 선택하여 비교
    for (let j = 0; j < arr.length - i - 1; j++) {
      // 현재 원소가 다음 원소보다 크면 위치를 바꿔줌 (swap)
      if (arr[j] > arr[j + 1]) {
        let temp = arr[j]; // temp에 현재 원소 저장
        arr[j] = arr[j + 1]; // 현재 원소를 다음 원소로 덮어 씌움
        arr[j + 1] = temp; // 다음 원소를 현재 원소로 덮어 씌움
      }
    }
  }
};

// (n - 1) + (n - 2) + (n - 3) .... + 1
// 등차 수열

// 배열 정렬 전 출력
console.log("==== 배열 정렬 전 ====");
console.log(arr);

// 버블 정렬 호출
bubbleSort(arr);

// 배열 정렬 후 출력
console.log("==== 배열 정렬 후 ====");
console.log(arr);
